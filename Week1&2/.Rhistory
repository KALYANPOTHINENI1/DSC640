# Load the necessary library
library(ggplot2)
library(readr)
# Load the necessary library
library(ggplot2)
library(readr)
getwd()
hotdog_contest_winners <- read.csv("data/hotdog-contest-winners.csv")
hotdog_places <- read_csv("data/hotdog-places.csv")
spec("data/hotdog-places.csv")
survey_data <- read_csv("data/obama-approval-ratings.csv")
hotdog_places <- read_csv("data/hotdog-places.csv" , show_col_types = FALSE)
survey_data <- read_csv("data/obama-approval-ratings.csv", show_col_types = FALSE)
view(hotdog_contest_winners)
library(tidyverse)
view(hotdog_contest_winners)
view(hotdog_places)
view(survey_data)
#Bar Chart
ggplot(hotdog_contest_winners, aes(x = Year, y = `Dogs eaten`)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Hot Dog Contest Winners: Dogs Eaten Over Years",
x = "Year", y = "Dogs Eaten")
rlang::last_trace()
library(ggplot2)
ggplot(hotdog_contest_winners, aes(x = Year, y = `Dogs eaten`)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Hot Dog Contest Winners: Dogs Eaten Over Years",
x = "Year", y = "Dogs Eaten")
colnames(hotdog_contest_winners)
#Bar Chart
ggplot(hotdog_contest_winners, aes(x = Year, y = `Dogs.eaten`)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Hot Dog Contest Winners: Dogs Eaten Over Years",
x = "Year", y = "Dogs Eaten")
hotdog_places_long <- pivot_longer(hotdog_places, cols = -Year, names_to = "Place", values_to = "Dogs Eaten")
ggplot(hotdog_places_long, aes(x = Year, y = `Dogs.eaten`, fill = Place)) +
geom_bar(stat = "identity", position = "stack") +
theme_minimal() +
labs(title = "Hot Dog Eating Contest Places Over Years",
x = "Year", y = "Dogs Eaten")
#Stacked Bar chart
hotdog_places_long <- pivot_longer(hotdog_places, cols = -Year, names_to = "Place", values_to = "Dogs Eaten")
ggplot(hotdog_places_long, aes(x = Year, y = `Dogs Eaten`, fill = Place)) +
geom_bar(stat = "identity", position = "stack") +
theme_minimal() +
labs(title = "Hot Dog Eating Contest Places Over Years",
x = "Year", y = "Dogs Eaten")
# Assuming hotdog_places is already loaded and looks like the one you provided
# Transforming it to long format
hotdog_places_long <- pivot_longer(hotdog_places, cols = -Year, names_to = "Place", values_to = "Dogs Eaten")
# Plotting with specified colors
ggplot(hotdog_places_long, aes(x = Year, y = `Dogs Eaten`, fill = Place)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = c("First_Place" = "gold", "Second_Place" = "silver", "Third_Place" = "#cd7f32")) + # bronze color code
theme_minimal() +
labs(title = "Hot Dog Eating Contest Places Over Years",
x = "Year", y = "Dogs Eaten")
ggplot(hotdog_places_long, aes(x = Year, y = `Dogs Eaten`, fill = Place)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = c("First_Place" = "gold", "Second_Place" = "silver", "Third_Place" = "#cd7f32")) + # bronze color code
theme_minimal() +
labs(title = "Hot Dog Eating Contest Places Over Years",
x = "Year", y = "Dogs Eaten")
#Stacked Bar chart
hotdog_places_long <- pivot_longer(hotdog_places, cols = -Year, names_to = "Place", values_to = "Dogs Eaten")
ggplot(hotdog_places_long, aes(x = Year, y = `Dogs Eaten`, fill = Place)) +
geom_bar(stat = "identity", position = "stack") +
#  scale_fill_manual(values = c("First_Place" = "gold", "Second_Place" = "silver", "Third_Place" = "#cd7f32")) + # bronze color code
theme_minimal() +
labs(title = "Hot Dog Eating Contest Places Over Years",
x = "Year", y = "Dogs Eaten")
#Stacked Bar chart
hotdog_places_long <- pivot_longer(hotdog_places, cols = -Year, names_to = "Place", values_to = "Dogs Eaten")
ggplot(hotdog_places_long, aes(x = Year, y = `Dogs Eaten`, fill = Place)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = c("First_Place" = "gold", "Second_Place" = "silver", "Third_Place" = "#cd7f32")) + # bronze color code
theme_minimal() +
labs(title = "Hot Dog Eating Contest Places Over Years",
x = "Year", y = "Dogs Eaten")
#Stacked Bar chart
hotdog_places_long <- pivot_longer(hotdog_places, cols = -Year, names_to = "Place", values_to = "Dogs Eaten")
ggplot(hotdog_places_long, aes(x = Year, y = `Dogs Eaten`, fill = Place)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = c("First_Place" = "gold", "Second_Place" = "#C0C0C0", "Third_Place" = "#cd7f32")) + # bronze color code
theme_minimal() +
labs(title = "Hot Dog Eating Contest Places Over Years",
x = "Year", y = "Dogs Eaten")
race_relations <- survey_data[survey_data$Issue == "Race Relations", -1]
# Convert to long format
race_relations_long <- pivot_longer(race_relations, names_to = "Response", values_to = "Percentage")
race_relations <- survey_data[survey_data$Issue == "Race Relations", ]
race_relations_long <- pivot_longer(race_relations,
cols = c(Approve, Disapprove, None),
names_to = "Response",
values_to = "Percentage")
ggplot(race_relations_long, aes(x = "", y = Percentage, fill = Response)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
theme_void() +
labs(title = "Survey on Race Relations")
ggplot(race_relations_long, aes(x = 2, y = Percentage, fill = Response)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
xlim(c(0.5, 2.5)) +
theme_void() +
labs(title = "Survey on Race Relations (Donut Chart)") +
theme(legend.title = element_blank())
view(race_relations)
library(tidyr)
library(ggplot2)
library(dplyr)
# Assuming 'survey_data' is your dataset
# Convert the survey data into a long format
survey_data_long <- pivot_longer(survey_data,
cols = c(Approve, Disapprove, None),
names_to = "Response",
values_to = "Percentage",
names_prefix = "Response_")
# Now, to visualize this for a single issue, let's filter for 'Race Relations' as an example
race_relations_long <- survey_data_long %>%
filter(Issue == "Race Relations")
# Pie Chart for 'Race Relations'
ggplot(race_relations_long, aes(x = "", y = Percentage, fill = Response)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
theme_void() +
labs(title = "Survey Responses on Race Relations")
# For a donut chart, the concept is similar, but you adjust the plot to create a 'hole' in the middle
ggplot(race_relations_long, aes(x = "", y = Percentage, fill = Response)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
theme_void() +
labs(title = "Survey Responses on Race Relations") +
xlim(c(-0.5, 0.5)) # Adjusting this value can help control the size of the 'hole' for the donut chart
survey_data_long <- pivot_longer(survey_data,
cols = c(Approve, Disapprove, None),
names_to = "Response",
values_to = "Percentage",
names_prefix = "Response_")
race_relations_long <- survey_data_long %>%
filter(Issue == "Race Relations")
ggplot(race_relations_long, aes(x = "", y = Percentage, fill = Response)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
theme_void() +
labs(title = "Survey Responses on Race Relations")
ggplot(race_relations_long, aes(x = "", y = Percentage, fill = Response)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
theme_void() +
labs(title = "Survey Responses on Race Relations") +
xlim(c(-0.5, 0.5)) # Adjusting this value can help control the size of the 'hole' for the donut chart
# Load the necessary library
library(ggplot2)
library(readr)
library(tidyverse)
# Load the dataset
hotdog_contest_winners <- read.csv("data/hotdog-contest-winners.csv")
hotdog_places <- read_csv("data/hotdog-places.csv" , show_col_types = FALSE)
survey_data <- read_csv("data/obama-approval-ratings.csv", show_col_types = FALSE)
#Bar Chart
ggplot(hotdog_contest_winners, aes(x = Year, y = `Dogs.eaten`)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Hot Dog Contest Winners: Dogs Eaten Over Years",
x = "Year", y = "Dogs Eaten")
colnames(hotdog_contest_winners)
#Stacked Bar chart
hotdog_places_long <- pivot_longer(hotdog_places, cols = -Year, names_to = "Place", values_to = "Dogs Eaten")
ggplot(hotdog_places_long, aes(x = Year, y = `Dogs Eaten`, fill = Place)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = c("First_Place" = "gold", "Second_Place" = "#C0C0C0", "Third_Place" = "#cd7f32")) + # bronze color code
theme_minimal() +
labs(title = "Hot Dog Eating Contest Places Over Years",
x = "Year", y = "Dogs Eaten")
#Pie Chart
race_relations <- survey_data[survey_data$Issue == "Race Relations", ]
view(race_relations)
# Since the first column ("Issue") is not needed for the plot, and to avoid the pivot_longer() error,
# directly use the columns you need
race_relations_long <- pivot_longer(race_relations,
cols = c(Approve, Disapprove, None),
names_to = "Response",
values_to = "Percentage")
ggplot(race_relations_long, aes(x = "", y = Percentage, fill = Response)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
theme_void() +
labs(title = "Survey on Race Relations")
#Donut Chart
ggplot(race_relations_long, aes(x = 2, y = Percentage, fill = Response)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
xlim(c(0.5, 2.5)) +
theme_void() +
labs(title = "Survey on Race Relations (Donut Chart)") +
theme(legend.title = element_blank())
#Stacked Bar chart
hotdog_places_long <- pivot_longer(hotdog_places, cols = -Year, names_to = "Place", values_to = "Dogs Eaten")
ggplot(hotdog_places_long, aes(x = Year, y = `Dogs Eaten`, fill = Place)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = c("First_Place" = "gold", "Second_Place" = "#C0C0C0", "Third_Place" = "#cd7f32")) + # bronze color code
theme_minimal() +
labs(title = "Hot Dog Eating Contest Places Over Years",
x = "Year", y = "Dogs Eaten")
# Load the necessary library
library(ggplot2)
library(readr)
library(tidyverse)
# Load the dataset
hotdog_contest_winners <- read.csv("data/hotdog-contest-winners.csv")
hotdog_places <- read_csv("data/hotdog-places.csv" , show_col_types = FALSE)
survey_data <- read_csv("data/obama-approval-ratings.csv", show_col_types = FALSE)
#Bar Chart
ggplot(hotdog_contest_winners, aes(x = Year, y = `Dogs.eaten`)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Hot Dog Contest Winners: Dogs Eaten Over Years",
x = "Year", y = "Dogs Eaten")
# Load the necessary library
library(ggplot2)
library(readr)
library(tidyverse)
# Load the dataset
hotdog_contest_winners <- read.csv("data/hotdog-contest-winners.csv")
hotdog_places <- read_csv("data/hotdog-places.csv" , show_col_types = FALSE)
survey_data <- read_csv("data/obama-approval-ratings.csv", show_col_types = FALSE)
#Bar Chart
ggplot(hotdog_contest_winners, aes(x = Year, y = `Dogs.eaten`)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Hot Dog Contest Winners: Dogs Eaten Over Years",
x = "Year", y = "Dogs Eaten")
colnames(hotdog_contest_winners)
#Stacked Bar chart
hotdog_places_long <- pivot_longer(hotdog_places, cols = -Year, names_to = "Place", values_to = "Dogs Eaten")
ggplot(hotdog_places_long, aes(x = Year, y = `Dogs Eaten`, fill = Place)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = c("First_Place" = "gold", "Second_Place" = "#C0C0C0", "Third_Place" = "#cd7f32")) + # bronze color code
theme_minimal() +
labs(title = "Hot Dog Eating Contest Places Over Years",
x = "Year", y = "Dogs Eaten")
#Pie Chart
race_relations <- survey_data[survey_data$Issue == "Race Relations", ]
# Since the first column ("Issue") is not needed for the plot, and to avoid the pivot_longer() error,
# directly use the columns you need
race_relations_long <- pivot_longer(race_relations,
cols = c(Approve, Disapprove, None),
names_to = "Response",
values_to = "Percentage")
ggplot(race_relations_long, aes(x = "", y = Percentage, fill = Response)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
theme_void() +
labs(title = "Survey on Race Relations")
#Donut Chart
ggplot(race_relations_long, aes(x = 2, y = Percentage, fill = Response)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y") +
xlim(c(0.5, 2.5)) +
theme_void() +
labs(title = "Survey on Race Relations (Donut Chart)") +
theme(legend.title = element_blank())
